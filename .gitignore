# Node.js 多人游戏项目 .gitignore

# 依赖包目录
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# 运行时数据
pids
*.pid
*.seed
*.pid.lock

# 诊断报告文件 (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# 运行时数据
coverage/
*.lcov

# nyc 测试覆盖率
.nyc_output

# Grunt 中间和输出文件
.grunt

# Bower 依赖目录
bower_components

# node-waf 配置
.lock-wscript

# 编译后的二进制插件 (https://nodejs.org/api/addons.html)
build/Release

# 依赖目录
node_modules/
jspm_packages/

# TypeScript v1 声明文件
typings/

# TypeScript 缓存
*.tsbuildinfo

# 可选的 npm 缓存目录
.npm

# 可选的 eslint 缓存
.eslintcache

# Microbundle 缓存
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# 可选的 REPL 历史
.node_repl_history

# yarn v2 的输出
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

# 环境变量文件
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# parcel-bundler 缓存 (https://parceljs.org/)
.cache
.parcel-cache

# Next.js 构建输出
.next

# Nuxt.js 构建 / 生成输出
.nuxt
dist

# Gatsby 文件
.cache/
public

# Storybook 构建输出
.out
.storybook-out

# Temporary folders
tmp/
temp/

# 操作系统生成的文件
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows 图像文件缓存
Thumbs.db
ehthumbs.db

# Windows 文件夹配置文件
Desktop.ini

# Windows 回收站使用的文件
$RECYCLE.BIN/

# Windows Installer 文件
*.cab
*.msi
*.msm
*.msp

# Windows 快捷方式
*.lnk

# VS Code 设置文件夹（保留用户特定设置）
.vscode/settings.json
.vscode/launch.json
.vscode/extensions.json
.vscode/*.log

# JetBrains IDEs
.idea/
*.swp
*.swo

# Vim
*~
*.swp
*.swo

# Sublime Text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache
*.sublime-workspace
*.sublime-project

# 日志文件
logs
*.log

# 游戏特定文件
# 如果有玩家数据存储文件，可以在这里添加
# playerdata/
# saves/
# config/local.json

# SSL 证书（如果使用HTTPS）
*.pem
*.key
*.cert

# PM2 配置文件（如果使用PM2部署）
ecosystem.config.js

# 构建输出（如果有构建步骤）
build/
dist/

# 测试覆盖率报告
coverage/

# 性能测试结果
.nyc_output/
